Global:
    Country and CountryCodes united in Country
    Comments text improoved to simditor. Requires surrounding all comments with tag <p>
    Added 'database_processes_count' to countries. All 'database_processes_count' must be recalculated

    Tables:                               !!!!!!!!!! DONE !!!!!!!!!
        attachments:
            file_name => filename

MAD:
    Tables:
        manufacturers:                             !!!!!!!!!! DONE !!!!!!!!!
            is_active => active
            is_important => important

        user_responsible_country_code => responsible_country_user             !!!!!!!!!! DONE !!!!!!!!!
            country_code_id => country_id => All ids must be fixed!!!

        products:
            MOQ => string replaced with INT. Must fix all existed MOQs. Remove non-numeric symbols and trim

        process_general_statuses:                                    !!!!!!!!!! DONE !!!!!!!!!
            visible_only_for_admins => requires_permission

        process_statuses:
            Added 'NKk' to the middle. Requires fixing all old 'status_id' of processes

        processes:                                                      !!!!!!!!!! DONE !!!!!!!!!
            status_update_date => removed
            manufacturer_followed_offered_price_in_usd => removed
            increased_price_percentage => removed

            contracted_in_plan => contracted
            registered_in_plan => registered
            country_code_id => country_id. All ids must be fixed!!!

        kvpp_statuses => product_search_statuses                        !!!!!!!!!! DONE !!!!!!!!!
        kvpp_priorities => product_search_priorities                    !!!!!!!!!! DONE !!!!!!!!!

        kvpps => product_searches:                                       !!!!!!!!!! DONE !!!!!!!!!
            country_code_id => country_id. All ids must be fixed!!!
            portfolio_manager_id => nullable removed!

        country_code_kvpp => additional_search_country_product_search:  !!!!!!!!!! DONE !!!!!!!!!
            country_code_id => country_id. All ids must be fixed!!!
            kvpp_id => product_search_id


--------------------------- Not done yet (what left) ------------------------------
Products selection export

Manufacturers:
    tbody Meetings
    EVENTS => Requires Meetings


--------------------- LEFT AFTER COPYING
clinical_trial_country_process => country_id             !!!!!!!!!! DONE !!!!!!!!!
additional_search_country_product_search => country_id   !!!!!!!!!! DONE !!!!!!!!!
product_searches => country_id                           !!!!!!!!!! DONE !!!!!!!!!
user_responsible_country_code => country_id              !!!!!!!!!! DONE !!!!!!!!!
manufacturers => country_id                              !!!!!!!!!! DONE !!!!!!!!!
processes => country_id                                  !!!!!!!!!! DONE !!!!!!!!!

process_statuses => Added 'NKk' to the middle. Requires fixing all old 'status_id' of processes  !!!!!!!!!! DONE !!!!!!!!!

process_status_histories => status_id   !!!!!!!!!! DONE !!!!!!!!!

products => MOQ     !!!!!!!!!! DONE !!!!!!!!!

Comments text improoved to simditor. Requires surrounding all comments with tag <p>  !!!!!!!!!! DONE !!!!!!!!!

Added 'database_processes_count' to countries. All 'database_processes_count' must be recalculated   !!!!!!!!!! DONE !!!!!!!!!


KOREA, SOUTH => South Korea done
UNITED STATES OF AMERICA => USA done
KOREA, NORTH => North Korea => done
BOSNIA AND HERZEGOVINA => Bosnia and Herz-a done
MYANMAR (BURMA) => Myanmar => done




----------------------------------- Helper functions
        // $records = Product::all();

        // foreach ($records as $record) {
        //     $moq = $record->moq;
        //     $moq = preg_replace('/\D/', '', $moq);
        //     $record->moq = (int) $moq;
        //     $record->timestamps = false;
        //     $record->saveQuietly();
        // }


        // $records = Comment::all();

        // foreach ($records as $record) {
        //     $record->body = '<p>' . $record->body . '</p>';
        //     $record->save();
        // }


        // $records = Process::all();

        // foreach ($records as $record) {
        //     if ($record->status_id == 21) {
        //         $record->status_id = 13;
        //         $record->timestamps = false;
        //         $record->saveQuietly();
        //     } else if ($record->status_id > 12) {
        //         $record->status_id = $record->status_id + 1;
        //         $record->timestamps = false;
        //         $record->saveQuietly();
        //     }
        // }


        // $records = ProcessStatusHistory::all();

        // foreach ($records as $record) {
        //     if ($record->status_id == 21) {
        //         $record->status_id = 13;
        //         $record->save();
        //     } else if ($record->status_id > 12) {
        //         $record->status_id = $record->status_id + 1;
        //         $record->save();
        //     }
        // }

        // $records = DB::table('additional_search_country_product_search')->get();
        // foreach ($records as $record) {
        //     // Validate old country_code_id
        //     $currentCountryCode = CountryCode::find($record->country_id);
        //     $newCountryID = Country::where('code', $currentCountryCode->name)->first()->id;

        //     // Update the record directly
        //     DB::table('additional_search_country_product_search')
        //         ->where('country_id', $record->country_id)
        //         ->where('product_search_id', $record->product_search_id)
        //         ->update(['country_id' => $newCountryID]);
        // }


        // $records = DB::table('clinical_trial_country_process')->get();
        // foreach ($records as $record) {
        //     // Validate old country_id
        //     $currentCountry = OldCountry::find($record->country_id);
        //     $newCountryID = Country::where('name', ucfirst($currentCountry->name))->first()->id;

        //     // Update the record directly
        //     DB::table('clinical_trial_country_process')
        //         ->where('country_id', $record->country_id)
        //         ->where('process_id', $record->process_id)
        //         ->update(['country_id' => $newCountryID]);
        // }

        // $records = ProductSearch::all();

        // foreach ($records as $record) {
        //     $currentCountryCode = CountryCode::find($record->country_id);
        //     $newCountryID = Country::where('code', $currentCountryCode->name)->first()->id;

        //     $record->country_id = $newCountryID;
        //     $record->timestamps = false;
        //     $record->saveQuietly();
        // }

        // $records = DB::table('responsible_country_user')->get();
        // foreach ($records as $record) {
        //     // Validate old country_code_id
        //     $currentCountryCode = CountryCode::find($record->country_id);
        //     $newCountryID = Country::where('code', $currentCountryCode->name)->first()->id;

        //     // Update the record directly
        //     DB::table('responsible_country_user')
        //         ->where('country_id', $record->country_id)
        //         ->where('user_id', $record->user_id)
        //         ->update(['country_id' => $newCountryID]);
        // }

        // $records = Manufacturer::withTrashed()->get();

        // foreach ($records as $record) {
        //     $currentCountry = OldCountry::find($record->country_id);

        //     $newCountry = Country::where('name', ucfirst($currentCountry->name))->first();

        //     if (!$newCountry) {
        //         dd($currentCountry->name);
        //     }

        //     $newCountryID = Country::where('name', ucfirst($currentCountry->name))->first()->id;

        //     $record->country_id = $newCountryID;
        //     $record->timestamps = false;
        //     $record->saveQuietly();
        // }

        // $records = Process::withTrashed()->get();

        // foreach ($records as $record) {
        //     $currentCountryCode = CountryCode::find($record->country_id);
        //     $newCountryID = Country::where('code', $currentCountryCode->name)->first()->id;

        //     $record->country_id = $newCountryID;
        //     $record->timestamps = false;
        //     $record->saveQuietly();
        // }

        // Country::recalculateAllProcessCounts();

        // $records = Process::onlyTrashed()->get();

        // foreach ($records as $record) {
        //     if ($record->status_id == 21) {
        //         $record->status_id = 13;
        //         $record->timestamps = false;
        //         $record->saveQuietly();
        //     } else if ($record->status_id > 12) {
        //         $record->status_id = $record->status_id + 1;
        //         $record->timestamps = false;
        //         $record->saveQuietly();
        //     }
        // }

        // $records = ProductSearch::onlyTrashed()->get();

        // foreach ($records as $record) {
        //     $currentCountryCode = CountryCode::find($record->country_id);
        //     $newCountryID = Country::where('code', $currentCountryCode->name)->first()->id;

        //     $record->country_id = $newCountryID;
        //     $record->timestamps = false;
        //     $record->saveQuietly();
        // }



        User::each(function ($user) {
            if (!$user->department_id) {
                $user->department_id = 2;
                $user->timestamps = false;
                $user->saveQuietly();
            }
        });



sudo rm -rf /path/to/directory
